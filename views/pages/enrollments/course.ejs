<%- include('../../partials/header') %>

<section class="content-block light-grey">
  <h1>Course Enrollments</h1>
  <p>View all enrollments for this course. Data is synced with Moodle to show current status.</p>

  <div class="mb-3">
    <a href="/moodle/courses" class="btn btn-secondary">
      <i class="fa fa-arrow-left"></i> Back to Courses
    </a>
    <a href="/enrollments/new" class="btn btn-primary">
      <i class="fa fa-plus"></i> Add More Enrollments
    </a>
  </div>

  <table id="enrollmentsTable" class="display" style="width:100%">
    <thead>
      <tr>
        <th>User Email</th>
        <th>Status</th>
        <th>Enrollment Date</th>
        <th>Expiry Date</th>
        <th>Last Moodle Access</th>
        <th>Actions</th>
      </tr>
    </thead>
    <tbody></tbody>
  </table>
</section>

<script src="/lib/DataTables/datatables.min.js"></script>
<script>
$(document).ready(function() {
  const courseId = '<%= courseId %>';
  
  const table = $('#enrollmentsTable').DataTable({
    ajax: {
      url: `/enrollments/course/${courseId}`,
      headers: { 'Accept': 'application/json' },
      dataSrc: function(json) {
        if (json && json.success && Array.isArray(json.data)) {
          return json.data;
        }
        return [];
      }
    },
    columns: [
      { data: 'user_email' },
      { data: 'status' },
      { 
        data: 'enrollment_date',
        render: function(data) {
          return data ? new Date(data).toLocaleDateString('en-GB') : '-';
        }
      },
      { 
        data: 'expiry_date',
        render: function(data) {
          return data ? new Date(data).toLocaleDateString('en-GB') : '-';
        }
      },
      { 
        data: 'moodle_last_access',
        render: function(data) {
          return data ? new Date(data).toLocaleDateString('en-GB') : '-';
        }
      },
      {
        data: null,
        render: function(data, type, row) {
          let actions = '';
          
          if (row.status === 'pending_account_creation') {
            actions += `<button class="btn btn-sm btn-outline-primary resend-email" data-enrollment-id="${row._id}" title="Resend Email">
                        <i class="fa fa-envelope"></i> Resend
                      </button> `;
          }
          
          if (row.secret_token) {
            actions += `<button class="btn btn-sm btn-outline-info show-token" data-token="${row.secret_token}" title="Copy Verification Link">
                        <i class="fa fa-copy"></i> Copy Link
                      </button>`;
          }
          
          return actions || '-';
        }
      }
    ],
    order: [[2, 'desc']],
    pageLength: 25,
    responsive: true
  });

  // Handle resend email
  $('#enrollmentsTable').on('click', '.resend-email', function() {
    const enrollmentId = $(this).data('enrollment-id');
    const button = $(this);
    
    button.prop('disabled', true).html('<i class="fa fa-spinner fa-spin"></i> Sending...');
    
    fetch(`/enrollments/${enrollmentId}/resend-email`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' }
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        alert('Enrollment email resent successfully');
      } else {
        alert('Error: ' + data.message);
      }
    })
    .catch(error => {
      console.error('Error:', error);
      alert('An error occurred while resending the email.');
    })
    .finally(() => {
      button.prop('disabled', false).html('<i class="fa fa-envelope"></i> Resend');
    });
  });

  // Handle show token
  $('#enrollmentsTable').on('click', '.show-token', function() {
    const token = $(this).data('token');
    const verificationUrl = `${window.location.origin}/enrollments/verify/${token}`;
    
    // Try to copy to clipboard directly
    if (navigator.clipboard && window.isSecureContext) {
      navigator.clipboard.writeText(verificationUrl).then(() => {
        // Show success message
        const button = $(this);
        const originalText = button.html();
        button.html('<i class="fa fa-check"></i> Copied!').addClass('btn-success').removeClass('btn-outline-info');
        
        // Reset button after 2 seconds
        setTimeout(() => {
          button.html(originalText).removeClass('btn-success').addClass('btn-outline-info');
        }, 2000);
        
        // Show alert
        alert('Verification link copied to clipboard!\n\n' + verificationUrl);
      }).catch(err => {
        console.error('Failed to copy: ', err);
        // Fallback: show the URL in an alert
        alert('Verification Link:\n\n' + verificationUrl + '\n\nPlease copy this link manually.');
      });
    } else {
      // Fallback for older browsers or non-secure contexts
      alert('Verification Link:\n\n' + verificationUrl + '\n\nPlease copy this link manually.');
    }
  });
});
</script>

<%- include('../../partials/footer') %>
